plugins {
    id 'java'
}

group 'edu.usc.csci572'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    // https://mvnrepository.com/artifact/org.apache.hadoop/hadoop-client
    implementation group: 'org.apache.hadoop', name: 'hadoop-client', version: '3.3.4'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-configuration2
    implementation group: 'org.apache.commons', name: 'commons-configuration2', version: '2.8.0'

    // https://mvnrepository.com/artifact/commons-logging/commons-logging
    implementation group: 'commons-logging', name: 'commons-logging', version: '1.2'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.14.2'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.2'

    // https://mvnrepository.com/artifact/com.beust/jcommander
    implementation group: 'com.beust', name: 'jcommander', version: '1.82'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.6'

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.5'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' '),
                'Main-Class': 'edu.usc.csci572.Main'
        )
    }
}

tasks.register('copyAllDependencies', Copy) {
    from configurations.compileClasspath
    into "${buildDir}/libs"
}
build.dependsOn(copyAllDependencies)